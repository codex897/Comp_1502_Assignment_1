	/**
	 * This method checks if the total hand is above 21
	 * 
	 * If the total hand is above 21, then that is considered a bust
	 * 
	 * @param handVal the total value of a hand (calculated using .calculateHandValue() method
	 * @return true if total hand is above 21, False if less
	 */
	private boolean isBust(int handVal) { // handval is calculated from using calculateHandValue method

		if(handVal > 21) {
			return true;
		}
		else {
			return false;
		}
	}
	
	/**
	 * This method determines the results of the game when it ends
	 * 
	 * @return if the match was a tie loss or a regular win
	 */
	private String determineWinner() {
		int playerHandVal= calculateHandValue(player.getHand());
		int dealerHandVal= calculateHandValue(dealer.getHand());
		String results = "";

		if (playerHandVal == dealerHandVal){	//if playerhandval is the same as daalerhandval then set the results to "tie"
			results = "tie";						//but does not end the game
		}
		else if (playerHandVal < dealerHandVal ) { // if the playerhandval is less than dealer handval then set results to "loss"
			results = "loss";
		}
		else if (playerHandVal > dealerHandVal) { // if the playerHandval is more than dealeHandVal then set results to "regularWin"
			results = "regularWin";
		} 
		
		return  results;

	}
	
	/**
	 * This method calculates and sets the final balance of the player
	 * @param result the result of the match, whether its a blackjack for the player, a tie, or just a regular win
	 */
	private void payout(String result) {
		double blackJackPayoutMultiplier= 1.5;
		
		switch (result) {
		case "blackjack": 
			player.setBalance(player.getBalance() + (blackJackPayoutMultiplier * bettingAmount));
			break;
			
		
		case "regularWin":
			player.setBalance(player.getBalance() +  bettingAmount);
			break;
		
		case "tie":
			//keep there current balance they win nor lose any
			break;

		case "loss": 
			player.setBalance(player.getBalance() -  bettingAmount);
			break;	
		}
	}
	
